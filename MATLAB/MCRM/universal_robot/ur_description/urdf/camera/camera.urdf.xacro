<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="camera_size" value="0.005" /> <!-- Use a square to represent the camera , value is the Size of square 'camera' box -->

  <xacro:macro name="wrist_camera" params="prefix parent">

      <material name="camera_light_grey">
        <color rgba="0.4 0.4 0.4 1"/>
      </material>

      <material name="camera_dark_grey">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>

      <joint name="${prefix}robotiq_wrist_camera_base_joint" type="fixed">
         <parent link="${prefix}${parent}"/>
         <child link="${prefix}robotiq_wrist_camera_base_link"/>
         <origin rpy="${pi/2.0} ${pi} ${pi/2.0}" xyz="0.0044 0 0"/>
      </joint>

      <link name="${prefix}robotiq_wrist_camera_base_link">
       <visual>
         <geometry>
          <mesh filename="package://ur_description/meshes/camera/visual/WRIST_CAMERA.stl" scale="0.001 0.001 0.001" />
         </geometry>
             <material name="camera_dark_grey"/>
       </visual>
       <collision>
         <geometry>
           <mesh filename="package://ur_description/meshes/camera/visual/WRIST_CAMERA.stl" scale="0.001 0.001 0.001" />
         </geometry>
             <material name="camera_dark_grey"/>
       </collision>
       <inertial>
         <mass value="0.160" />
         <origin xyz="0.0 0.0 0.0" />
         <inertia ixx = "0.000111" ixy = "0.000000" ixz = "0.000000"
                  iyx = "0.000000" iyy = "0.00007" iyz = "0.000003"
                  izx = "0.000000" izy = "0.000003" izz = "0.000165" />
         </inertial>
      </link>

      <joint name="${prefix}robotiq_wrist_camera_joint" type="fixed">
         <origin xyz="0 0.042 0.01" rpy="0 ${-pi*2.0/3.0} ${-pi/2.0}"/>
         <parent link="${prefix}robotiq_wrist_camera_base_link"/>
         <child link="${prefix}robotiq_wrist_camera_link"/>
      </joint>

      <!-- Camera -->
      <link name="${prefix}robotiq_wrist_camera_link">
        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <box size="${camera_size} ${camera_size} ${camera_size}"/>
          </geometry>
          <material name="camera_light_grey"/>
        </collision>
        <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <box size="${camera_size} ${camera_size} ${camera_size}"/>
          </geometry>
          <material name="camera_light_grey"/>
        </visual>
        <inertial>
          <mass value="1e-5" />
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
      </link>

    <joint name="camera_optical_joint" type="fixed">
      <!-- these values have to be these values otherwise the gazebo camera
        image won't be aligned properly with the frame it is supposedly
        originating from -->
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
      <parent link="robotiq_wrist_camera_link"/>
      <child link="camera_link_optical"/>
    </joint>

  <link name="camera_link_optical" />

  <!-- toolside frame -->
  <joint name="${prefix}camera_toolside_joint" type="fixed" >
    <origin xyz="0 0 0.014" rpy="0 ${-pi/2.0} ${pi/2.0}" />
    <parent link="${prefix}robotiq_wrist_camera_base_link" />
    <child link="${prefix}camera_toolside" />
  </joint>
  <link name="${prefix}camera_toolside"/>

  <gazebo reference="robotiq_wrist_camera_link">
    <turnGravityOff>1</turnGravityOff>
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <visualize>true</visualize>
      <camera name="camera on wrist">
        <horizontal_fov>0.8727</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.07</near> <!-- Focus range of the camera 70mm-infinity -->
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link_optical</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  </xacro:macro>
</robot>
